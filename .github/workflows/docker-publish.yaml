name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  CI_IMAGE_REPOSITORY: docker.pkg.github.com/${{ github.repository }}
  CI_COMMIT_REF_NAME: ${{ github.ref }}
  CI_COMMIT_SHA: ${{ github.sha }}

jobs:
  # Build the image.
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image.
        run: |
          docker pull ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_REF_NAME} || docker pull ${CI_IMAGE_REPOSITORY}/node:latest || true
          docker build --pull --cache-from "${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_REF_NAME},${CI_IMAGE_REPOSITORY}/node:latest" -t ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_SHA} -t ${CI_IMAGE_REPOSITORY}/node:latest -f Dockerfile .
          docker push ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_SHA}

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure build job passes before pushing image.
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry.
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Pull image.
        run: docker pull ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_SHA}

      - name: Tag and Push image.
        run: |
          # IMAGE_ID=${CI_IMAGE_REPOSITORY}/node

          # Change all uppercase to lowercase.
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version.
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name.
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention.
          # [ "$VERSION" == "master" ] && VERSION=latest

          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION

          # docker tag ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_SHA} $IMAGE_ID:$VERSION
          # docker push $IMAGE_ID:$VERSION
          docker tag ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_SHA} ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_REF_NAME}
          docker push ${CI_IMAGE_REPOSITORY}/node:${CI_COMMIT_REF_NAME}
